// Main JavaScript entry point for frontend
// Centralized initialization system with dynamic loading

// Import core components
import { HTMXManager } from './components/htmx-manager.js';
import { initializeDropdowns } from './components/dropdown.js';
import { initializeTabs } from './components/tabs.js';
import { initializeForms } from './components/forms.js';
import { initializeThemeToggle } from './components/theme-toggle.js';
import { initializeUserMenu } from './components/user-menu.js';
import './components/dropdown-management.js';
import './components/notifications.js';

// Import page-specific functionality
import { initializeShop } from './pages/shop.js';

// Page initializers map for dynamic loading
const pageInitializers = {
  'shop-page': () => initializeShop(),
  'admin-page': () => import('./admin/productimage_single_primary.js').then(m => m.initializeAdmin?.()),
  'home-page': () => {
    // Homepage specific functionality can be added here
    console.log('Home page initialized');
  },
  'products-page': () => {
    // Products page specific functionality can be added here
    console.log('Products page initialized');
  },
  'contact-page': () => {
    // Contact page specific functionality can be added here
    console.log('Contact page initialized');
  }
};

// Global HTMX manager instance
let htmxManager;

// Initialize frontend functionality
document.addEventListener('DOMContentLoaded', function() {
  // Initialize HTMX manager first
  htmxManager = new HTMXManager();
  
  // Initialize core components
  initializeDropdowns();
  initializeTabs();
  initializeForms();
  initializeThemeToggle();
  initializeUserMenu();
  
  // Initialize page-specific functionality dynamically
  initializePageComponents();
  
  // Set up HTMX reinitialization handlers
  setupReinitializationHandlers();
});

// Initialize page-specific components based on page class
function initializePageComponents() {
  for (const [pageClass, initializer] of Object.entries(pageInitializers)) {
    if (document.querySelector(`.${pageClass}`) || 
        (pageClass === 'shop-page' && document.querySelector('#product-list-container')) ||
        (pageClass === 'admin-page' && document.querySelector('input[name$="-is_primary"]'))) {
      try {
        const result = initializer();
        if (result instanceof Promise) {
          result.catch(error => console.warn(`Failed to load ${pageClass} module:`, error));
        }
      } catch (error) {
        console.warn(`Failed to initialize ${pageClass}:`, error);
      }
    }
  }
}

// Set up handlers for component reinitialization after HTMX swaps
function setupReinitializationHandlers() {
  // Reinitialize dropdowns after HTMX content changes
  document.addEventListener('htmx:reinitialize-dropdowns', function(event) {
    initializeDropdowns();
  });
  
  // Reinitialize shop functionality after HTMX content changes
  document.addEventListener('htmx:reinitialize-shop', function(event) {
    initializeShop();
  });
  
  // Reinitialize forms after HTMX content changes
  document.addEventListener('htmx:reinitialize-forms', function(event) {
    initializeForms();
  });
}

// Export for global access if needed
window.htmxManager = htmxManager;
